{"version":3,"file":"commonHelpers.js","sources":["../src/js/bookShelfApi.js","../src/js/booksByCategory.js","../src/js/category.js","../src/js/modalAddRemove.js","../src/js/eachCategoryBooks.js","../src/js/scrollup.js"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://books-backend.p.goit.global/';\n// Запит Перелік категорій книг\nexport async function fetchBooksCategory() {\n  const response = await axios.get('/books/category-list');\n  return response.data;\n}\n\n// Запит Популярні книги, що належать до усіх категорій\nexport async function fetchAllTopBooks() {\n  const response = await axios.get('/books/top-books');\n  return response.data;\n}\n\n// Запит Книги окремої категорії\nexport async function fetchBooksBySelectedCategory(selectedCategory) {\n  const response = await axios.get(\n    `/books/category?category=${selectedCategory}`\n  );\n  return response.data;\n}\n\n// Запит Детальна інформація про книгу по id\nexport async function fetchBookById(bookId) {\n  const response = await axios.get(`/books/${bookId}`);\n  return response.data;\n}\n\n// fetchBooksCategory().then(resp => console.log(resp));\nfetchAllTopBooks();\n// fetchBooksBySelectedCategory().then(resp => console.log(resp));\n// fetchBookById(\"643282b1e85766588626a0dc\").then(resp => console.log(resp));\n// console.log(\"hello\");\n\n","import { fetchBooksCategory, fetchAllTopBooks } from './bookShelfApi';\n// Функція для створення HTML для карточки книги\nfunction createBookCard(book, index) {\n  const mobileVisible = index === 0 ? 'mobile-visible' : '';\n  const tabletVisible = index < 3 ? 'tablet-visible' : '';\n  const desktopVisible = index < 5 ? 'desktop-visible' : '';\n  return `\n\n  <li id=\"${book._id}\" class=\"listener\" onclick=\"openModal('${book._id}')\">\n        <div class=\"book-category-card ${mobileVisible} ${tabletVisible} ${desktopVisible}\">\n        <div class=\"overlay-div\">\n          <img class=\"bookByCategory-img\" src=\"${book.book_image}\" alt=\"${book.title}\">\n          <p class=\"overlay-txt\">quick view</p>\n        </div>\n        <div class=\"book-category-details\">\n          <h3 class=\"book-category-title\">${book.title}</h3>\n          <p class=\"book-category-author\">${book.author}</p>\n        </div>\n      </div>\n    </li>\n  `;\n}\n\n// Функція для завантаження книг у відповідну категорію\nfunction loadBooks(categoryName, books) {\n  const categoryElement = document.querySelector(\n    `.book-category[data-category=\"${categoryName}\"]`\n  );\n  if (categoryElement) {\n    const loader = categoryElement.querySelector('.mask');\n    const booksHTML = books\n      .map((book, index) => createBookCard(book, index))\n      .join('');\n\n    const booksListElement = categoryElement.querySelector('.books-category-list');\n    booksListElement.innerHTML = booksHTML;\n    // Приховуємо лоадер, коли картки завантажені\n    loader.style.display = 'none';\n  }\n}\n\n\n// Функція для отримання та відображення книг по категоріям\nfunction fetchAndDisplayBooks() {\n  fetchAllTopBooks()\n    .then(categories => {\n      categories.forEach(category => {\n        loadBooks(category.list_name, category.books);\n      });\n    })\n    .catch(error =>\n      console.error('Помилка при завантаженні категорій книг:', error)\n    );\n}\n\n// !!!!!!!!!!!!!!!!!!!!\n\n// Функція для створення HTML контейнера категорії\nfunction createCategoryContainer(categoryName) {\n  const container = document.createElement('div');\n  container.className = 'book-category';\n  container.setAttribute('data-category', categoryName);\n\n  const titleDiv = document.createElement('div');\n  titleDiv.className = 'category-title';\n\n  const loaderDiv = document.createElement('div');\n  loaderDiv.className = 'mask';\n  loaderDiv.innerHTML = '<div class=\"loader\"></div>';\n\n  const titleSpan = document.createElement('span');\n  titleSpan.textContent = categoryName.toUpperCase();\n  titleDiv.appendChild(titleSpan);\n\n  const booksDiv = document.createElement('div');\n  booksDiv.className = 'books';\n  const ul = document.createElement('ul');\n  ul.className = 'books-category-list';\n  booksDiv.appendChild(ul);\n\n  const button = document.createElement('button');\n  button.id = categoryName.replace(/\\s+/g, '_');\n  button.classList.add('see-more');\n  button.textContent = 'SEE MORE';\n\n  // Встановлення обробника події через addEventListener\n  button.addEventListener('click', scrollFuc);\n\n  container.appendChild(titleDiv);\n  container.appendChild(loaderDiv);\n  container.appendChild(booksDiv);\n  container.appendChild(button);\n\n  return container;\n}\n\nfunction scrollFuc() {\n  window.scrollTo({ top: 0, behavior: 'smooth' });\n}\n\n\n\n// Функція для отримання категорій та додавання контейнерів до DOM\nfunction fetchAndDisplayCategories() {\n  const bestSellersList = document.querySelector('.best-sellers-list');\n\n  fetchBooksCategory()\n    .then(categories => {\n      // Обмеження кількості категорій до 5\n      categories.forEach(category => {\n        const categoryContainer = createCategoryContainer(category.list_name);\n        bestSellersList.appendChild(categoryContainer);\n      });\n    })\n    .catch(error => console.error('Error loading books:', error));\n}\n\n// Виклик функції при завантаженні сторінки\ndocument.addEventListener('DOMContentLoaded', () => {\n  fetchAndDisplayCategories();\n  fetchAndDisplayBooks();\n});\n","import { fetchBooksCategory } from './bookShelfApi';\n\nconst categoryListContainer = document.querySelector(\n  '.category-list-container'\n);\n\nfetchBooksCategory()\n  .then(resp => {\n    return resp\n      .map(\n        elem => `<li class=\"category-list-item\">\n    <button class=\"category-btn\" type=\"button\">\n      ${elem.list_name}\n    </button>\n  </li>`\n      )\n      .join('');\n  })\n  .then(MarkUp =>\n    categoryListContainer.insertAdjacentHTML('afterbegin', MarkUp)\n  );\n\nconst btnAllCategories = document.querySelector('.category-btn');\nbtnAllCategories.addEventListener('click', onClickAllCategories);\n\nfunction onClickAllCategories(event) {\n  console.log(event);\n}\n","import Notiflix from 'notiflix';\nimport{fetchBookById} from './bookShelfApi';\n\n\n  window.openModal = openModal;\n  const modal =document.querySelector('.modal');\n  const backdrop = modal.querySelector('.modal-body');\n  const closeModalButton = modal.querySelector('.modal-close');\n  \n\n\n// Open modal\n  async function openModal(id) {\n    try {\n    const book = await fetchBookById(id)\n    modal.setAttribute('data-book', JSON.stringify(book));\n    renderBookDetails(book); \n\n    modal.classList.add('open');\n    document.body.style.overflow = 'hidden';\n\n    } catch (error)  {\n      Notiflix.Notify.failure('error');\n  };\n\n\n  }\n  \n// Close modal \n    const closeModal = function () {\n        modal.classList.remove('open');\n        document.body.style.overflow = ''; // Відновлення прокрутки фону\n        // underButtonText.style.display = 'none';\n\n    };\n    \n    closeModalButton.addEventListener('click', closeModal);\n    backdrop.addEventListener('click', function(event) { \n    //додає перевірку куди було нажато якщо поза межами модалки то закрити вікно\n    if (event.target === backdrop) {\n          closeModal();\n        }\n    });\n\n    document.addEventListener('keydown', function (event) {\n        if (event.key === 'Escape') {\n          closeModal();\n        }\n    });\n\n    const addToShoppingListButton = modal.querySelector('.add-to-list');\nconst underButtonText = modal.querySelector('.under-btn-text');\n    // Combined function for Add to / Remove from shopping list\nfunction handleShoppingListButtonClick (event) {\n  event.stopPropagation();\n\n  // Оновлюємо інформацію про список в localStorage\n  let shoppingList = JSON.parse(localStorage.getItem('shoppingList')) || [];\n  // Отримуємо об'єкт book з атрибута data-book\n  const storedBook = JSON.parse(modal.getAttribute('data-book'));\n\n  // Check if the book is in the shopping list\n  const isBookInList = shoppingList.some(item => item._id === storedBook._id);\n\n  if (isBookInList) {\n    \n      shoppingList = shoppingList.filter(item => item._id !== storedBook._id);\n      \n  } else {\n      shoppingList.push(storedBook);\n      \n  }\nconsole.log(isBookInList)\n  localStorage.setItem('shoppingList', JSON.stringify(shoppingList));\n  updateShoppingListButton(!isBookInList);\n};\n\naddToShoppingListButton.addEventListener('click', handleShoppingListButtonClick);\n\n    \n    function renderBookDetails(book) {\n      const bookCover = document.querySelector('.book-cover');\n      const bookTitle = document.querySelector('.book-title');\n      const bookAuthor = document.querySelector('.book-author');\n      const bookDescription = document.querySelector('.book-description');\n      const amazonLink = document.querySelector('.marketplace-logo.amazon');\n      const appleBooksLink = document.querySelector('.marketplace-logo.apple-books');\n    \n      // Підставляємо значення в HTML\n      bookCover.src = book.book_image;\n      bookCover.alt = book.title;\n      bookTitle.textContent = book.title;\n      bookAuthor.textContent = book.author;\n      bookDescription.textContent = book.description || \"No description available\";\n    \n      // Підставляємо посилання для покупок\n      amazonLink.href = book.buy_links.find(link => link.name === 'Amazon')?.url || '';\n      appleBooksLink.href = book.buy_links.find(link => link.name === 'Apple Books')?.url || '';\n    }\n   \n\n     function updateShoppingListButton(isBookInList) {\n      // Оновлюємо текст кнопки в модалці\n      const buttonText = isBookInList ? 'Remove from the shopping list' : 'Add to shopping list';\n      addToShoppingListButton.textContent = buttonText;\n      underButtonText.style.display = isBookInList ? 'block' : 'none';\n  }","import { fetchBooksBySelectedCategory } from './bookShelfApi';\n\nconst categoryListContainer = document.querySelector(\n  '.category-list-container'\n);\n\nconst bestSellersList = document.querySelector('.best-sellers-list');\nconst bestselllersTitle = document.querySelector('.bestselllersTitle');\n\ncategoryListContainer.addEventListener('click', handleButtonClick);\n\nfunction handleButtonClick(event) {\n  const category = event.target.textContent.trim();\n  fetchBooksBySelectedCategory(category)\n    .then(resp => {\n      updateBestSellersList(resp);\n      updateTitle(resp[0].list_name);\n    })\n    .catch(error => {\n      console.error('Error loading books:', error);\n    });\n}\n\nfunction updateBestSellersList(books) {\n  bestSellersList.innerHTML = '';\n  books.forEach(book => {\n    bestSellersList.innerHTML += createBookMarkup(book);\n  });\n  bestSellersList.classList.add('books-list');\n}\n\nfunction createBookMarkup({ title, author, book_image, _id }) {\n  return `<div class=\"book-category\">\n             <div class=\"books\">\n               <ul class=\"books-category-list\">\n                 <li id=\"${_id}\" class=\"listener\" onclick=\"openModal('${_id}')\">\n                   <div class=\"book-category-card mobile-visible tablet-visible\">\n                    <div class=\"overlay-div\">\n                      <img class='bookByCategory-img' src=\"${book_image}\" alt=\"${title}\" />\n                      <p class=\"overlay-txt\">quick view</p>\n                    </div> \n                    <div class=\"book-category-details\">\n                       <h3 class=\"book-category-title\">${title}</h3>\n                       <p class=\"book-category-author\">${author}</p>\n                     </div>\n                   </div>\n                 </li>\n               </ul>\n             </div>\n           </div>`;\n}\n\nfunction updateTitle(title) {\n  bestselllersTitle.textContent = title;\n  stylizeLastWord(bestselllersTitle);\n}\n\nfunction stylizeLastWord(element) {\n  let words = element.textContent.trim().split(' ');\n  if (words.length > 1) {\n    let lastWord = words.pop();\n    element.innerHTML =\n      words.join(' ') + ' <span class=\"last-word\">' + lastWord + '</span>';\n  }\n}\n\n\n\n\nfunction seeMorebuttonClick(category) {\n  fetchBooksBySelectedCategory(category)\n    .then(resp => {\n      updateBestSellersList(resp);\n      updateTitle(resp[0].list_name);\n    })\n    .catch(error => {\n      console.error('Error loading books:', error);\n    });\n}\n\n\n// Виклик функції при завантаженні сторінки\ndocument.addEventListener('DOMContentLoaded', () => {\n  document.addEventListener('click', function(event) {\n    if (event.target.classList.contains('see-more')) {\n      seeMorebuttonClick(event.target.id.replace(/_/g, ' '));\n    }\n  });\n});\n\n","window.onscroll = function() {\n  showScrollUpButton();\n};\n\nfunction showScrollUpButton() {\n  const button = document.querySelector('.scrollup');\n  if (document.body.scrollTop > 500 || document.documentElement.scrollTop > 500) {\n    button.style.display = 'block';\n  } else {\n    button.style.display = 'none';\n  }\n}\n\nfunction scrollToTop() {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth' \n  });\n}\n\nconst button = document.querySelector('.scrollup');\nbutton.addEventListener('click', scrollToTop);\n\n\n\n"],"names":["axios","fetchBooksCategory","fetchAllTopBooks","fetchBooksBySelectedCategory","selectedCategory","fetchBookById","bookId","createBookCard","book","index","mobileVisible","tabletVisible","desktopVisible","loadBooks","categoryName","books","categoryElement","loader","booksHTML","booksListElement","fetchAndDisplayBooks","categories","category","error","createCategoryContainer","container","titleDiv","loaderDiv","titleSpan","booksDiv","ul","button","scrollFuc","fetchAndDisplayCategories","bestSellersList","categoryContainer","categoryListContainer","resp","elem","MarkUp","btnAllCategories","onClickAllCategories","event","openModal","modal","backdrop","closeModalButton","id","renderBookDetails","Notiflix","closeModal","addToShoppingListButton","underButtonText","handleShoppingListButtonClick","shoppingList","storedBook","isBookInList","item","updateShoppingListButton","bookCover","bookTitle","bookAuthor","bookDescription","amazonLink","appleBooksLink","_a","link","_b","buttonText","bestselllersTitle","handleButtonClick","updateBestSellersList","updateTitle","createBookMarkup","title","author","book_image","_id","stylizeLastWord","element","words","lastWord","seeMorebuttonClick","showScrollUpButton","scrollToTop"],"mappings":"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"}
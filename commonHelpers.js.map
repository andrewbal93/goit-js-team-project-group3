{"version":3,"file":"commonHelpers.js","sources":["../src/js/modalAddRemove.js","../src/js/bookShelfApi.js"],"sourcesContent":["\n// import{fetchBookById, fetchBooksCategory, fetchAllTopBooks, fetchBooksBySelectedCategory} from './request';\n\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n    const openModalLink = document.querySelector('.open-modal');\n    const modal = document.querySelector('.modal');\n    const closeModalButton = modal.querySelector('.modal-close');\n    const addToShoppingListButton = modal.querySelector('.add-to-list');\n    const backdrop = modal.querySelector('.modal-body');\n    const underButtonText = modal.querySelector('.under-btn-text');\n    \n    // Open modal\n    openModalLink.addEventListener('click', function () {\n        modal.classList.add('open');\n        document.body.style.overflow = 'hidden'; // Заборона прокрутки фону\n    });\n\n    // Close modal\n    const closeModal = function () {\n        modal.classList.remove('open');\n        document.body.style.overflow = ''; // Відновлення прокрутки фону\n        // underButtonText.style.display = 'none';\n    };\n\n    closeModalButton.addEventListener('click', closeModal);\n    backdrop.addEventListener('click', closeModal);\n\n    document.addEventListener('keydown', function (event) {\n        if (event.key === 'Escape') {\n            closeModal();\n        }\n    });\n\n    // Add to / Remove from shopping list\n    addToShoppingListButton.addEventListener('click', function (event) {\n        event.stopPropagation();\n        // Оновлюємо інформацію про список в localStorage\n        let shoppingList = JSON.parse(localStorage.getItem('shoppingList')) || [];\n        const bookTitle = modal.querySelector('.book-title').textContent;\n\n        if (shoppingList.includes(bookTitle)) {\n            shoppingList = shoppingList.filter(item => item !== bookTitle);\n        } else {\n            shoppingList.push(bookTitle);\n        }\n\n        localStorage.setItem('shoppingList', JSON.stringify(shoppingList));\n\n        // Оновлюємо текст кнопки в модалці\n        const isBookInList = updateShoppingListButton(shoppingList);\n        underButtonText.style.display = isBookInList ? 'block' : 'none';\n    });\n\n    // Функція для оновлення тексту кнопки відповідно до стану списку\n    function updateShoppingListButton(shoppingList) {\n        const bookTitle = modal.querySelector('.book-title').textContent;\n        const isBookInList = shoppingList.includes(bookTitle);\n\n        if (isBookInList) {\n            addToShoppingListButton.textContent = 'Remove from the shopping list';\n        } else {\n            addToShoppingListButton.textContent = 'Add to shopping list';\n        }\n        return isBookInList;\n    }\n\n    // Ініціалізація тексту кнопки при завантаженні сторінки\n    const initialShoppingList = JSON.parse(localStorage.getItem('shoppingList')) || [];\n    updateShoppingListButton(initialShoppingList);\n    // underButtonText.style.display = 'none';\n});\n\n\n","import axios from \"axios\";\naxios.defaults.baseURL = 'https://books-backend.p.goit.global/';\n// Запит Перелік категорій книг\nexport function fetchBooksCategory() {\n  return axios.get('/books/category-list').then(resp => {\n    return resp.data;\n  });\n}\n// Запит Популярні книги, що належать до усіх категорій\nexport function fetchAllTopBooks() {\n  return axios.get('/books/top-books').then(resp => {\n    return resp.data;\n  });\n}\n// Запит Книги окремої категорії\nexport function fetchBooksBySelectedCategory(selectedCategory) {\n  return axios\n    .get(`/books/category?category=${selectedCategory}`)\n    .then(resp => {\n      return resp.data;\n    });\n}\n// Запит Детальна інформація про книгу по id\nexport function fetchBookById(bookId) {\n  return axios.get(`/books/bookId?bookId=${bookId}`).then(resp => {\n    return resp.data;\n  });\n}\nfetchBooksCategory().then(resp => console.log(resp));\n// fetchAllTopBooks().then(resp => console.log(resp));\n// fetchBooksBySelectedCategory().then(resp => console.log(resp));\n// fetchBookById().then(resp => console.log(resp));"],"names":["openModalLink","modal","closeModalButton","addToShoppingListButton","backdrop","underButtonText","closeModal","event","shoppingList","bookTitle","item","isBookInList","updateShoppingListButton","initialShoppingList","axios","fetchBooksCategory","resp"],"mappings":"oGAKA,SAAS,iBAAiB,mBAAoB,UAAY,CACtD,MAAMA,EAAgB,SAAS,cAAc,aAAa,EACpDC,EAAQ,SAAS,cAAc,QAAQ,EACvCC,EAAmBD,EAAM,cAAc,cAAc,EACrDE,EAA0BF,EAAM,cAAc,cAAc,EAC5DG,EAAWH,EAAM,cAAc,aAAa,EAC5CI,EAAkBJ,EAAM,cAAc,iBAAiB,EAG7DD,EAAc,iBAAiB,QAAS,UAAY,CAChDC,EAAM,UAAU,IAAI,MAAM,EAC1B,SAAS,KAAK,MAAM,SAAW,QACvC,CAAK,EAGD,MAAMK,EAAa,UAAY,CAC3BL,EAAM,UAAU,OAAO,MAAM,EAC7B,SAAS,KAAK,MAAM,SAAW,EAEvC,EAEIC,EAAiB,iBAAiB,QAASI,CAAU,EACrDF,EAAS,iBAAiB,QAASE,CAAU,EAE7C,SAAS,iBAAiB,UAAW,SAAUC,EAAO,CAC9CA,EAAM,MAAQ,UACdD,GAEZ,CAAK,EAGDH,EAAwB,iBAAiB,QAAS,SAAUI,EAAO,CAC/DA,EAAM,gBAAe,EAErB,IAAIC,EAAe,KAAK,MAAM,aAAa,QAAQ,cAAc,CAAC,GAAK,GACvE,MAAMC,EAAYR,EAAM,cAAc,aAAa,EAAE,YAEjDO,EAAa,SAASC,CAAS,EAC/BD,EAAeA,EAAa,OAAOE,GAAQA,IAASD,CAAS,EAE7DD,EAAa,KAAKC,CAAS,EAG/B,aAAa,QAAQ,eAAgB,KAAK,UAAUD,CAAY,CAAC,EAGjE,MAAMG,EAAeC,EAAyBJ,CAAY,EAC1DH,EAAgB,MAAM,QAAUM,EAAe,QAAU,MACjE,CAAK,EAGD,SAASC,EAAyBJ,EAAc,CAC5C,MAAMC,EAAYR,EAAM,cAAc,aAAa,EAAE,YAC/CU,EAAeH,EAAa,SAASC,CAAS,EAEpD,OAAIE,EACAR,EAAwB,YAAc,gCAEtCA,EAAwB,YAAc,uBAEnCQ,CACV,CAGD,MAAME,EAAsB,KAAK,MAAM,aAAa,QAAQ,cAAc,CAAC,GAAK,GAChFD,EAAyBC,CAAmB,CAEhD,CAAC,ECvEDC,EAAM,SAAS,QAAU,uCAElB,SAASC,GAAqB,CACnC,OAAOD,EAAM,IAAI,sBAAsB,EAAE,KAAKE,GACrCA,EAAK,IACb,CACH,CAqBAD,EAAoB,EAAC,KAAKC,GAAQ,QAAQ,IAAIA,CAAI,CAAC"}
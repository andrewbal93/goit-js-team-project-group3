{"version":3,"file":"commonHelpers.js","sources":["../src/js/modalAddRemove.js","../src/js/bookShelfApi.js","../src/js/booksByCategory.js","../src/js/category.js"],"sourcesContent":["\n// import{fetchBookById, fetchBooksCategory, fetchAllTopBooks, fetchBooksBySelectedCategory} from './request';\n\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n    const openModalLink = document.querySelector('.open-modal');\n    const modal = document.querySelector('.modal');\n    const closeModalButton = modal.querySelector('.modal-close');\n    const addToShoppingListButton = modal.querySelector('.add-to-list');\n    const backdrop = modal.querySelector('.modal-body');\n    const underButtonText = modal.querySelector('.under-btn-text');\n    \n    // Open modal\n    openModalLink.addEventListener('click', function () {\n        modal.classList.add('open');\n        document.body.style.overflow = 'hidden'; // Заборона прокрутки фону\n    });\n\n    // Close modal\n    const closeModal = function () {\n        modal.classList.remove('open');\n        document.body.style.overflow = ''; // Відновлення прокрутки фону\n        // underButtonText.style.display = 'none';\n    };\n\n    closeModalButton.addEventListener('click', closeModal);\n    backdrop.addEventListener('click', closeModal);\n\n    document.addEventListener('keydown', function (event) {\n        if (event.key === 'Escape') {\n            closeModal();\n        }\n    });\n\n    // Add to / Remove from shopping list\n    addToShoppingListButton.addEventListener('click', function (event) {\n        event.stopPropagation();\n        // Оновлюємо інформацію про список в localStorage\n        let shoppingList = JSON.parse(localStorage.getItem('shoppingList')) || [];\n        const bookTitle = modal.querySelector('.book-title').textContent;\n\n        if (shoppingList.includes(bookTitle)) {\n            shoppingList = shoppingList.filter(item => item !== bookTitle);\n        } else {\n            shoppingList.push(bookTitle);\n        }\n\n        localStorage.setItem('shoppingList', JSON.stringify(shoppingList));\n\n        // Оновлюємо текст кнопки в модалці\n        const isBookInList = updateShoppingListButton(shoppingList);\n        underButtonText.style.display = isBookInList ? 'block' : 'none';\n    });\n\n    // Функція для оновлення тексту кнопки відповідно до стану списку\n    function updateShoppingListButton(shoppingList) {\n        const bookTitle = modal.querySelector('.book-title').textContent;\n        const isBookInList = shoppingList.includes(bookTitle);\n\n        if (isBookInList) {\n            addToShoppingListButton.textContent = 'Remove from the shopping list';\n        } else {\n            addToShoppingListButton.textContent = 'Add to shopping list';\n        }\n        return isBookInList;\n    }\n\n    // Ініціалізація тексту кнопки при завантаженні сторінки\n    const initialShoppingList = JSON.parse(localStorage.getItem('shoppingList')) || [];\n    updateShoppingListButton(initialShoppingList);\n    // underButtonText.style.display = 'none';\n});\n\n\n","import axios from \"axios\";\naxios.defaults.baseURL = 'https://books-backend.p.goit.global/';\n// Запит Перелік категорій книг\nexport async function fetchBooksCategory() {\n  const response = await axios.get('/books/category-list')\n    return response.data;\n}\n\n// async function getApi(searchImg, page, perPage) {\n    // const URL = 'https://pixabay.com/api/';\n    // const API_KEY = \"40442533-4b6791bab363289733298af78\";\n\n  //   try {\n  //     const response = await axios.get(\n  //       `${URL}?key=${API_KEY}&q=${searchImg}&image_type=photo&orientation=horizontal&safesearch=true&page=${page}&per_page=${perPage}`);\n  //     return response.data;\n      \n  //   } catch (error) {\n  //     Notify.failure(\"Sorry, there are no images matching your search query. Please try again.\");\n  //   }\n    \n  // }\n\n// Запит Популярні книги, що належать до усіх категорій\nexport function fetchAllTopBooks() {\n  return axios.get('/books/top-books').then(resp => {\n    return resp.data;\n  });\n}\n// Запит Книги окремої категорії\nexport function fetchBooksBySelectedCategory(selectedCategory) {\n  return axios\n    .get(`/books/category?category=${selectedCategory}`)\n    .then(resp => {\n      return resp.data;\n    });\n}\n// Запит Детальна інформація про книгу по id\nexport function fetchBookById(bookId) {\n  return axios.get(`/books/${bookId}`).then(resp => {\n    return resp.data;\n  });\n}\n\n// fetchBooksCategory().then(resp => console.log(resp));\nfetchAllTopBooks().then(resp => console.log(resp));\n// fetchBooksBySelectedCategory().then(resp => console.log(resp));\n// fetchBookById(\"643282b1e85766588626a0dc\").then(resp => console.log(resp));\n// console.log(\"hello\");","import {\n  fetchBooksCategory,\n  fetchAllTopBooks,\n} from './bookShelfApi';\n\n// Функція для створення HTML для карточки книги\nfunction createBookCard(book, index) {\n  const mobileVisible = index === 0 ? 'mobile-visible' : '';\n  const tabletVisible = index < 3 ? 'tablet-visible' : '';\n  const desktopVisible = index < 5 ? 'desktop-visible' : '';\n  return `\n    <li id=\"book-${book._id}\" class=\"listener\">\n      <div class=\"book-category-card ${mobileVisible} ${tabletVisible} ${desktopVisible}\">\n        <img class=\"bookByCategory-img\" src=\"${book.book_image}\" alt=\"${book.title}\">\n        <div class=\"book-category-details\">\n          <h3 class=\"book-category-title\">${book.title}</h3>\n          <p class=\"book-category-author\">${book.author}</p>\n        </div>\n      </div>\n    </li>\n  `;\n}\n\n// Функція для завантаження книг у відповідну категорію\nfunction loadBooks(categoryName, books) {\n  const categoryElement = document.querySelector(`.book-category[data-category=\"${categoryName}\"] .books-category-list`);\n  if (categoryElement) {\n    const booksHTML = books.map((book, index) => createBookCard(book, index)).join('');\n    categoryElement.innerHTML = booksHTML;\n  }\n}\n\n// Функція для отримання та відображення книг по категоріям\nfunction fetchAndDisplayBooks() {\n\n  fetchAllTopBooks()\n    .then(categories => {\n      categories.forEach(category => {\n        loadBooks(category.list_name, category.books);\n      });\n    })\n    .catch(error => console.error('Помилка при завантаженні категорій книг:', error));\n}\n\n// !!!!!!!!!!!!!!!!!!!!\n\n// Функція для створення HTML контейнера категорії\nfunction createCategoryContainer(categoryName) {\n  const container = document.createElement('div');\n  container.className = 'book-category';\n  container.setAttribute('data-category', categoryName);\n\n  const titleDiv = document.createElement('div');\n  titleDiv.className = 'category-title';\n\n  const titleSpan = document.createElement('span');\n  titleSpan.textContent = categoryName.toUpperCase();\n  titleDiv.appendChild(titleSpan);\n\n  const booksDiv = document.createElement('div');\n  booksDiv.className = 'books';\n  const ul = document.createElement('ul');\n  ul.className = 'books-category-list';\n  booksDiv.appendChild(ul);\n\n  const button = document.createElement('button');\n  button.className = 'see-more';\n  button.textContent = 'SEE MORE';\n\n  container.appendChild(titleDiv);\n  container.appendChild(booksDiv);\n  container.appendChild(button);\n\n  return container;\n}\n\n// Функція для отримання категорій та додавання контейнерів до DOM\nfunction fetchAndDisplayCategories() {\n\n  const bestSellersList = document.querySelector('.best-sellers-list') \n\n  fetchBooksCategory()\n    .then(categories => {\n      // Обмеження кількості категорій до 5\n      categories.forEach(category => {\n        const categoryContainer = createCategoryContainer(category.list_name);\n        bestSellersList.appendChild(categoryContainer)\n      });\n    })\n    .catch(error => console.error('Помилка при завантаженні категорій книг:', error));\n}\n\n\n\n\n// Виклик функції при завантаженні сторінки\n\n//Додавання контейнерів\ndocument.addEventListener('DOMContentLoaded', fetchAndDisplayCategories);\n\n//Додавання карток\ndocument.addEventListener('DOMContentLoaded', fetchAndDisplayBooks);\n","import { fetchBooksCategory } from \"./bookShelfApi\";\n\nconst categoryListContainer = document.querySelector(\".category-list-container\"); \n\nfetchBooksCategory().then((resp) => {\n    return resp.map((elem) => `<li class=\"category-list-item\">\n    <button class=\"category-btn\" type=\"button\">\n      ${elem.list_name}\n    </button>\n  </li>`).join(\"\");\n}).then((MarkUp) => categoryListContainer.insertAdjacentHTML(\"afterbegin\", MarkUp))\n\n\n\n// const categoryFetchResponce = fetchBooksCategory().then((value) => \n//     value.json()).then((data) => {return data;});\n\n// console.log(categoryFetchResponce)\n\n\n\n// const MarkUp = categoryFetchResponce.map((elem) => `<li class=\"category-list-item\">\n//     <button class=\"category-btn\" type=\"button\">\n//       ${elem[\"list_name\"]}\n//     </button>\n//   </li>`).join(\"\");\n// categoryListContainer.insertAdjacentHTML(\"afterbegin\", MarkUp);\n\n/* <li class=\"category-list-item\">\n    <button class=\"category-btn\" type=\"button\">\n      Category Placeholder Text\n    </button>\n  </li> */"],"names":["openModalLink","modal","closeModalButton","addToShoppingListButton","backdrop","underButtonText","closeModal","event","shoppingList","bookTitle","item","isBookInList","updateShoppingListButton","initialShoppingList","axios","fetchBooksCategory","fetchAllTopBooks","resp","createBookCard","book","index","mobileVisible","tabletVisible","desktopVisible","loadBooks","categoryName","books","categoryElement","booksHTML","fetchAndDisplayBooks","categories","category","error","createCategoryContainer","container","titleDiv","titleSpan","booksDiv","ul","button","fetchAndDisplayCategories","bestSellersList","categoryContainer","categoryListContainer","elem","MarkUp"],"mappings":"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"}